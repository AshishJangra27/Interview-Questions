Q1. What is the difference between INNER JOIN and OUTER JOIN?

Answer: "An INNER JOIN returns only the rows where there is a match in both tables involved in the join. If there are no matching rows, the result is null. An OUTER JOIN includes all rows from one table and the matching rows from the other table. If there is no match, it returns null for the columns from the table without a match. This can be further divided into LEFT JOIN, which includes all rows from the left table, and RIGHT JOIN, which includes all rows from the right table."

Q2. How do you handle missing data in a dataset using SQL?

Answer: "To handle missing data in SQL, I typically use the COALESCE function to replace null values with a specified value. This ensures that computations and data analysis are not affected by null values. Additionally, I can filter out rows with null values by using a condition in the WHERE clause, such as WHERE column IS NOT NULL, to ensure that only complete records are included in my analysis."

Q3. What are the differences between DELETE and TRUNCATE?

Answer: "The DELETE command is used to remove specific rows from a table based on a condition and can be rolled back if used within a transaction. It also fires any associated triggers. Conversely, the TRUNCATE command removes all rows from a table without logging individual row deletions and cannot be rolled back in most databases. TRUNCATE is faster than DELETE and resets any identity columns."

Q4. How do you write a SQL query to find duplicate records in a table?

Answer: "To find duplicate records, I would use the GROUP BY clause along with the HAVING clause. By grouping the rows based on the columns that should be unique and using HAVING COUNT(*) > 1, I can identify which groups have more than one occurrence, indicating duplicates. This method is efficient for quickly pinpointing duplicate records in large datasets."

Q5. What is a subquery, and how is it used?

Answer: "A subquery is a query nested inside another query. It is used to perform intermediate steps in complex queries, often for filtering results or performing calculations that are then used by the main query. For example, I might use a subquery to find employees whose salaries are above the average salary. The subquery would calculate the average salary, and the main query would then compare each employee's salary to this average."

These questions and answers will help you prepare for your SQL interview and demonstrate your knowledge effectively.

